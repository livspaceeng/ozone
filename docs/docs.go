// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://livspace.io",
        "contact": {
            "name": "Ankit",
            "url": "https://livspace.io",
            "email": "ankit.a@livspace.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/check": {
            "get": {
                "description": "check token and policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "auth check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resource",
                        "name": "object",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "access-type",
                        "name": "relation",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Default value is Bouncer. Use 'accounts' value for Accounts Hydra",
                        "name": "hydra",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003cBouncer_access_token\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    }
                }
            }
        },
        "/auth/expand": {
            "get": {
                "description": "expand relation tuple",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "expand relation tuple",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "max-depth to expand tuple",
                        "name": "max-depth",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resource",
                        "name": "object",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "access-type",
                        "name": "relation",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003cBouncer_access_token\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    }
                }
            }
        },
        "/auth/relation_tuples": {
            "get": {
                "description": "query relation tuple",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "query relation tuple",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "subject",
                        "name": "subject_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resource",
                        "name": "object",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "access-type",
                        "name": "relation",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "subject_set namespace",
                        "name": "subject_set.namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "subject_set object",
                        "name": "subject_set.object",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "subject_set relation",
                        "name": "subject_set.relation",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer \u003cBouncer_access_token\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.KetoResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "check health",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "health check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003cBouncer_access_token\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.KetoResponse": {
            "type": "object",
            "properties": {
                "allowed": {
                    "type": "boolean",
                    "format": "bool",
                    "example": true
                },
                "code": {
                    "type": "integer",
                    "format": "int64",
                    "example": 403
                },
                "message": {
                    "type": "string",
                    "example": "Access Forbidden"
                },
                "reason": {
                    "type": "string",
                    "example": "Subject does not have access"
                },
                "request": {
                    "type": "string",
                    "example": "xyz"
                },
                "status": {
                    "type": "string",
                    "example": "403"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Ozone API",
	Description:      "An auth layer for APIs",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
